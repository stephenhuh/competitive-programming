var path = require('path');
var fs = require('fs');


var p = process.argv[2];
if (!p) {
    console.log('Must specifiy a source code path');
    process.exit(2);
}
p = path.resolve(p);

GLOBAL.print = console.log.bind(console, '>>');

GLOBAL.readLine = (function() {
    var ended = false;
    var win32 = function() {
        return ('win32' === process.platform);
    },
    readSync = function(buffer) {
        if (ended) return 0;
        var fd = win32() ? process.stdin.fd : fs.openSync('/dev/stdin', 'rs');
        var bytes = fs.readSync(fd, buffer, 0, buffer.length);
        if (!win32()) fs.closeSync(fd);
        if (bytes == 0) {
            ended = true;
            return 0;
        }
        return bytes;
    };
    var lineBuff = '';
    var lines = [];
    var buffer = new Buffer(256);
    return function() {
        while (!lines.length) {
            try {
                var bytes = readSync(buffer);
                if (bytes == 0) {
                    if (lineBuff) {
                        return lineBuff;
                    }
                    else
                        process.exit(0);
                }
                var ret = buffer.toString(null, 0, bytes);
                var l = (lineBuff + ret).split(/\r?\n\r?/);
                lineBuff = l.pop();
                lines = l;
            } catch (e) {
                throw e;
            }
        }
        return lines.shift();
    };
})();
GLOBAL.readline = GLOBAL.readLine;

while(true) {
    require(p);
    delete require.cache[require.resolve(p)];
}
